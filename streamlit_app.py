import streamlit as st
import pandas as pd
import os
import pyttsx3
import requests
from PIL import Image
import speech_recognition as sr

# === Configuration ===
DATA_FOLDER = "Data"
MASTERDATA_FOLDER = "MasterData"
HF_API_URL = "https://api-inference.huggingface.co/models/Jayanth2002/dinov2-base-finetuned-SkinDisease"
HF_API_KEY = "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"

# === Load CSV Datasets ===
try:
    dataset = pd.read_csv(os.path.join(DATA_FOLDER, "dataset.csv"))
    training_data = pd.read_csv(os.path.join(DATA_FOLDER, "training.csv"))
    testing_data = pd.read_csv(os.path.join(DATA_FOLDER, "testing.csv"))

    symptom_desc = pd.read_csv(os.path.join(MASTERDATA_FOLDER, "symptom_Description.csv"))
    symptom_precaution = pd.read_csv(os.path.join(MASTERDATA_FOLDER, "symptom_precaution.csv"))
    symptom_severity = pd.read_csv(os.path.join(MASTERDATA_FOLDER, "Symptom_severity.csv"))

    all_symptoms = training_data.columns[1:].tolist()

except FileNotFoundError as e:
    st.error(f"Error: A required data file was not found. Please ensure your project structure is correct.")
    st.stop()

# === Translation Dictionaries ===
# UI Text Translations
translations = {
    "en": {
        "title": "ЁЯй║ Healthcare Chatbot", "sidebar_header": "Patient Info", "name_label": "Enter your name",
        "symptoms_label": "Select your symptoms", "days_label": "How many days have you had symptoms?",
        "additional_symptoms_header": "ЁЯФН Additional Symptoms", "additional_symptom_question": "Do you also have {}?",
        "submit_button": "ЁЯФО Submit Symptoms", "voice_button": "ЁЯОЩя╕П Start Voice Recognition",
        "symptoms_title": "тЬФя╕П Your Selected Symptoms:", "diagnosis_title": "ЁЯй║ Possible Diagnosis from Symptoms",
        "description_title": "ЁЯУЪ Disease Description", "precautions_title": "ЁЯЫбя╕П Precautions",
        "severity_title": "тЪая╕П Symptom Severity Levels", "image_upload_header": "ЁЯУ╕ Upload Skin Image for Disease Detection",
        "upload_label": "Upload an image of the skin disease",
        "spinner_text": "ЁЯФД Analyzing image using Hugging Face model...",
        "ai_prediction": "ЁЯдЦ AI Prediction:", "ai_precaution_header": "ЁЯЫбя╕П Suggested Precautions for this Condition",
        "no_precaution": "No specific precautions found for this disease.",
        "api_error": "тЭМ Failed to connect to Hugging Face API. Please check your key or quota.",
        "ai_no_detect": "тЪая╕П Could not detect any condition from the image.",
        "warning_select_symptom": "Please select at least one symptom.", "listening": "Listening...",
        "you_said": "You said:", "no_understand": "Could not understand audio.",
        "request_error": "Could not request results;", "processing_voice": "Processing your voice input:",
        "detected_symptoms": "тЬФя╕П Detected Symptoms from Voice Input:",
        "no_symptoms_found": "No symptoms found in your voice input.", "greeting": "Hello, how can I help you today?",
        "google_lang": "en-US"
    },
    "hi": {
        "title": "ЁЯй║ рд╕реНрд╡рд╛рд╕реНрдереНрдп рджреЗрдЦрднрд╛рд▓ рдЪреИрдЯрдмреЙрдЯ", "sidebar_header": "рд░реЛрдЧреА рдЬрд╛рдирдХрд╛рд░реА", "name_label": "рдЕрдкрдирд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ",
        "symptoms_label": "рдЕрдкрдиреЗ рд▓рдХреНрд╖рдг рдЪреБрдиреЗрдВ", "days_label": "рдЖрдкрдХреЛ рдХрд┐рддрдиреЗ рджрд┐рдиреЛрдВ рд╕реЗ рд▓рдХреНрд╖рдг рд╣реИрдВ?",
        "additional_symptoms_header": "ЁЯФН рдЕрддрд┐рд░рд┐рдХреНрдд рд▓рдХреНрд╖рдг", "additional_symptom_question": "рдХреНрдпрд╛ рдЖрдкрдХреЛ {} рднреА рд╣реИ?",
        "submit_button": "ЁЯФО рд▓рдХреНрд╖рдг рд╕рдмрдорд┐рдЯ рдХрд░реЗрдВ", "voice_button": "ЁЯОЩя╕П рдзреНрд╡рдирд┐ рдкрд╣рдЪрд╛рди рд╢реБрд░реВ рдХрд░реЗрдВ",
        "symptoms_title": "тЬФя╕П рдЖрдкрдХреЗ рдЪрдпрдирд┐рдд рд▓рдХреНрд╖рдг:", "diagnosis_title": "ЁЯй║ рд▓рдХреНрд╖рдгреЛрдВ рд╕реЗ рд╕рдВрднрд╛рд╡рд┐рдд рдирд┐рджрд╛рди",
        "description_title": "ЁЯУЪ рд░реЛрдЧ рдХрд╛ рд╡рд┐рд╡рд░рдг", "precautions_title": "ЁЯЫбя╕П рд╕рд╛рд╡рдзрд╛рдирд┐рдпрд╛рдВ",
        "severity_title": "тЪая╕П рд▓рдХреНрд╖рдгреЛрдВ рдХрд╛ рдЧрдВрднреАрд░рддрд╛ рд╕реНрддрд░", "image_upload_header": "ЁЯУ╕ рддреНрд╡рдЪрд╛ рд░реЛрдЧ рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
        "upload_label": "рддреНрд╡рдЪрд╛ рд░реЛрдЧ рдХреА рдПрдХ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
        "spinner_text": "ЁЯФД рд╣рдЧрд┐рдВрдЧ рдлреЗрд╕ рдореЙрдбрд▓ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдЫрд╡рд┐ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ...",
        "ai_prediction": "ЁЯдЦ AI рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА:", "ai_precaution_header": "ЁЯЫбя╕П рдЗрд╕ рд╕реНрдерд┐рддрд┐ рдХреЗ рд▓рд┐рдП рд╕реБрдЭрд╛рдИ рдЧрдИ рд╕рд╛рд╡рдзрд╛рдирд┐рдпрд╛рдВ",
        "no_precaution": "рдЗрд╕ рд░реЛрдЧ рдХреЗ рд▓рд┐рдП рдХреЛрдИ рд╡рд┐рд╢реЗрд╖ рд╕рд╛рд╡рдзрд╛рдиреА рдирд╣реАрдВ рдорд┐рд▓реАред",
        "api_error": "тЭМ рд╣рдЧрд┐рдВрдЧ рдлреЗрд╕ API рд╕реЗ рдХрдиреЗрдХреНрдЯ рд╣реЛрдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓ред рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдХреБрдВрдЬреА рдпрд╛ рдХреЛрдЯрд╛ рдЬрд╛рдВрдЪреЗрдВред",
        "ai_no_detect": "тЪая╕П рдЫрд╡рд┐ рд╕реЗ рдХреЛрдИ рднреА рд╕реНрдерд┐рддрд┐ рдХрд╛ рдкрддрд╛ рдирд╣реАрдВ рдЪрд▓рд╛ред",
        "warning_select_symptom": "рдХреГрдкрдпрд╛ рдХрдо рд╕реЗ рдХрдо рдПрдХ рд▓рдХреНрд╖рдг рдЪреБрдиреЗрдВред", "listening": "рд╕реБрди рд░рд╣рд╛ рд╣реВрдБ...",
        "you_said": "рдЖрдкрдиреЗ рдХрд╣рд╛:", "no_understand": "рдСрдбрд┐рдпреЛ рд╕рдордЭ рдирд╣реАрдВ рдЖрдпрд╛ред",
        "request_error": "рдЕрдиреБрд░реЛрдз рдХреЗ рдкрд░рд┐рдгрд╛рдо рдирд╣реАрдВ рдорд┐рд▓ рд╕рдХреЗ;", "processing_voice": "рдЖрдкрдХреЗ рдзреНрд╡рдирд┐ рдЗрдирдкреБрдЯ рдХрд╛ рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ:",
        "detected_symptoms": "тЬФя╕П рдзреНрд╡рдирд┐ рдЗрдирдкреБрдЯ рд╕реЗ рдкрддрд╛ рдЪрд▓реЗ рд▓рдХреНрд╖рдг:",
        "no_symptoms_found": "рдЖрдкрдХреЗ рдзреНрд╡рдирд┐ рдЗрдирдкреБрдЯ рдореЗрдВ рдХреЛрдИ рд▓рдХреНрд╖рдг рдирд╣реАрдВ рдорд┐рд▓рд╛ред", "greeting": "рдирдорд╕реНрддреЗ, рдореИрдВ рдЖрдЬ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?",
        "google_lang": "hi-IN"
    },
    "mr": {
        "title": "ЁЯй║ рдЖрд░реЛрдЧреНрдп рд╕реЗрд╡рд╛ рдЪреЕрдЯрдмреЙрдЯ", "sidebar_header": "рд░реБрдЧреНрдгрд╛рдЪреА рдорд╛рд╣рд┐рддреА", "name_label": "рддреБрдордЪреЗ рдирд╛рд╡ рдЯрд╛рдХрд╛",
        "symptoms_label": "рддреБрдордЪреА рд▓рдХреНрд╖рдгреЗ рдирд┐рд╡рдбрд╛", "days_label": "рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд┐рддреА рджрд┐рд╡рд╕рд╛рдВрдкрд╛рд╕реВрди рд▓рдХреНрд╖рдгреЗ рдЖрд╣реЗрдд?",
        "additional_symptoms_header": "ЁЯФН рдЕрддрд┐рд░рд┐рдХреНрдд рд▓рдХреНрд╖рдгреЗ", "additional_symptom_question": "рддреБрдореНрд╣рд╛рд▓рд╛ {} рд╕реБрджреНрдзрд╛ рдЖрд╣реЗ рдХрд╛?",
        "submit_button": "ЁЯФО рд▓рдХреНрд╖рдгреЗ рд╕рдмрдорд┐рдЯ рдХрд░рд╛", "voice_button": "ЁЯОЩя╕П рд╡реНрд╣реЙрдЗрд╕ рд░реЗрдХрдЧреНрдирд┐рд╢рди рд╕реБрд░реВ рдХрд░рд╛",
        "symptoms_title": "тЬФя╕П рддреБрдордЪреА рдирд┐рд╡рдбрд▓реЗрд▓реА рд▓рдХреНрд╖рдгреЗ:", "diagnosis_title": "ЁЯй║ рд▓рдХреНрд╖рдгрд╛рдВрд╡рд░ рдЖрдзрд╛рд░рд┐рдд рд╕рдВрднрд╛рд╡реНрдп рдирд┐рджрд╛рди",
        "description_title": "ЁЯУЪ рд░реЛрдЧрд╛рдЪреЗ рд╡рд░реНрдгрди", "precautions_title": "ЁЯЫбя╕П рдЦрдмрд░рджрд╛рд░реА",
        "severity_title": "тЪая╕П рд▓рдХреНрд╖рдгрд╛рдВрдЪреА рддреАрд╡реНрд░рддрд╛ рдкрд╛рддрд│реА", "image_upload_header": "ЁЯУ╕ рддреНрд╡рдЪреЗрдЪреНрдпрд╛ рд░реЛрдЧрд╛рдЪреНрдпрд╛ рд╢реЛрдзрд╛рд╕рд╛рдареА рдкреНрд░рддрд┐рдорд╛ рдЕрдкрд▓реЛрдб рдХрд░рд╛",
        "upload_label": "рддреНрд╡рдЪреЗрдЪреНрдпрд╛ рд░реЛрдЧрд╛рдЪреА рдкреНрд░рддрд┐рдорд╛ рдЕрдкрд▓реЛрдб рдХрд░рд╛",
        "spinner_text": "ЁЯФД рд╣рдЧрд┐рдВрдЧ рдлреЗрд╕ рдореЙрдбреЗрд▓ рд╡рд╛рдкрд░реВрди рдкреНрд░рддрд┐рдореЗрдЪреЗ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░рдд рдЖрд╣реЗ...",
        "ai_prediction": "ЁЯдЦ AI рдЕрдВрджрд╛рдЬ:", "ai_precaution_header": "ЁЯЫбя╕П рдпрд╛ рд╕реНрдерд┐рддреАрд╕рд╛рдареА рд╕реБрдЪрд╡рд▓реЗрд▓реА рдЦрдмрд░рджрд╛рд░реА",
        "no_precaution": "рдпрд╛ рд░реЛрдЧрд╛рд╕рд╛рдареА рдХреЛрдгрддреАрд╣реА рд╡рд┐рд╢рд┐рд╖реНрдЯ рдЦрдмрд░рджрд╛рд░реА рд╕рд╛рдкрдбрд▓реА рдирд╛рд╣реАред",
        "api_error": "тЭМ рд╣рдЧрд┐рдВрдЧ рдлреЗрд╕ API рд╢реА рдХрдиреЗрдХреНрдЯ рд╣реЛрдгреНрдпрд╛рдд рдЕрдпрд╢рд╕реНрд╡реА. рдХреГрдкрдпрд╛ рддреБрдордЪреА рдХреА рдХрд┐рдВрд╡рд╛ рдХреЛрдЯрд╛ рддрдкрд╛рд╕рд╛.",
        "ai_no_detect": "тЪая╕П рдкреНрд░рддрд┐рдореЗрддреВрди рдХреЛрдгрддреАрд╣реА рд╕реНрдерд┐рддреА рдУрд│рдЦрддрд╛ рдЖрд▓реА рдирд╛рд╣реАред",
        "warning_select_symptom": "рдХреГрдкрдпрд╛ рдХрдореАрддрдХрдореА рдПрдХ рд▓рдХреНрд╖рдг рдирд┐рд╡рдбрд╛ред", "listening": "рдРрдХрдд рдЖрд╣реЗ...",
        "you_said": "рддреБрдореНрд╣реА рдореНрд╣рдгрд╛рд▓рд╛рдд:", "no_understand": "рдСрдбрд┐рдУ рд╕рдордЬреВ рд╢рдХрд▓рд╛ рдирд╛рд╣реАред",
        "request_error": "рд╡рд┐рдирдВрддреА рдкрд░рд┐рдгрд╛рдо рдорд┐рд│реВ рд╢рдХрд▓рд╛ рдирд╛рд╣реА;", "processing_voice": "рддреБрдордЪреА рд╡реНрд╣реЙрдЗрд╕ рдЗрдирдкреБрдЯ рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдХрд░рдд рдЖрд╣реЗ:",
        "detected_symptoms": "тЬФя╕П рд╡реНрд╣реЙрдЗрд╕ рдЗрдирдкреБрдЯрдиреЗ рдЖрдврд│рд▓реЗрд▓реА рд▓рдХреНрд╖рдгреЗ:",
        "no_symptoms_found": "рддреБрдордЪреНрдпрд╛ рд╡реНрд╣реЙрдЗрд╕ рдЗрдирдкреБрдЯрдордзреНрдпреЗ рдХреЛрдгрддреАрд╣реА рд▓рдХреНрд╖рдгреЗ рдЖрдврд│рд▓реА рдирд╛рд╣реАрддред", "greeting": "рдирдорд╕реНрдХрд╛рд░, рдореА рдЖрдЬ рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд╢реА рдорджрдд рдХрд░реВ рд╢рдХреЗрди?",
        "google_lang": "mr-IN"
    },
    "or": {
        "title": "ЁЯй║ рм╕рнНрн▒рм╛рм╕рнНрмернНрнЯрм╕рнЗрммрм╛ рмЪрм╛рмЯрммрмЯрнН", "sidebar_header": "рм░рнЛрмЧрнА рм╕рнВрмЪрмирм╛", "name_label": "рмЖрмкрмгрмЩрнНрмХ рмирм╛рмо рмкрнНрм░рммрнЗрм╢ рмХрм░рмирнНрмдрнБ",
        "symptoms_label": "рмЖрмкрмгрмЩрнНрмХ рм▓рмХрнНрм╖рмгрмЧрнБрмбрм╝рм┐рмХрнБ рммрм╛рмЫрмирнНрмдрнБ", "days_label": "рмЖрмкрмгрмЩрнНрмХрнБ рмХрнЗрмдрнЗ рмжрм┐рми рм╣рнЗрмм рм▓рмХрнНрм╖рмг рмЕрмЫрм┐?",
        "additional_symptoms_header": "ЁЯФН рмЕрмдрм┐рм░рм┐рмХрнНрмд рм▓рмХрнНрм╖рмгрмЧрнБрмбрм╝рм┐рмХ", "additional_symptom_question": "рмЖрмкрмгрмЩрнНрмХрнБ {} рмормзрнНрнЯ рмЕрмЫрм┐ рмХрм┐?",
        "submit_button": "ЁЯФО рм▓рмХрнНрм╖рмг рмжрм╛рмЦрм▓ рмХрм░рмирнНрмдрнБ", "voice_button": "ЁЯОЩя╕П рмнрмПрм╕рнН рмЪрм┐рм╣рнНрмирмЯ рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ",
        "symptoms_title": "тЬФя╕П рмЖрмкрмгрмЩрнНрмХ рмжрнНрн▒рм╛рм░рм╛ рмЪрнЯрмирм┐рмд рм▓рмХрнНрм╖рмгрмЧрнБрмбрм╝рм┐рмХ:", "diagnosis_title": "ЁЯй║ рм▓рмХрнНрм╖рмгрм░рнБ рм╕рморнНрмнрм╛рммрнНрнЯ рмирм┐рм░рнНрмгрнНрмгрнЯ",
        "description_title": "ЁЯУЪ рм░рнЛрмЧрм░ рммрм░рнНрмгрнНрмгрмирм╛", "precautions_title": "ЁЯЫбя╕П рм╕рм╛рммрмзрм╛рмирмдрм╛",
        "severity_title": "тЪая╕П рм▓рмХрнНрм╖рмгрм░ рмЧрнБрм░рнБрмдрнНрн▒ рм╕рнНрмдрм░", "image_upload_header": "ЁЯУ╕ рмЪрм░рнНрмо рм░рнЛрмЧ рмЪрм┐рм╣рнНрмирмЯ рмкрм╛рмЗрмБ рмЫрммрм┐ рмЕрмкрм▓рнЛрмбрнН рмХрм░рмирнНрмдрнБ",
        "upload_label": "рмЪрм░рнНрмо рм░рнЛрмЧрм░ рмПрмХ рмЫрммрм┐ рмЕрмкрм▓рнЛрмбрнН рмХрм░рмирнНрмдрнБ",
        "spinner_text": "ЁЯФД рм╣рмЧрм┐рмВ рмлрнЗрм╕рнН рмормбрнЗрм▓рнН рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рм┐ рмЫрммрм┐ рммрм┐рм╢рнНрм│рнЗрм╖рмг рмХрм░рм╛рмпрм╛рмЙрмЫрм┐...",
        "ai_prediction": "ЁЯдЦ AI рмкрнВрм░рнНрммрм╛рмирнБрморм╛рми:", "ai_precaution_header": "ЁЯЫбя╕П рмПрм╣рм┐ рм╕рнНрмерм┐рмдрм┐ рмкрм╛рмЗрмБ рм╕рнБрмЧрмарм┐рмд рм╕рм╛рммрмзрм╛рмирмдрм╛",
        "no_precaution": "рмПрм╣рм┐ рм░рнЛрмЧ рмкрм╛рмЗрмБ рмХрнМрмгрм╕рм┐ рмирм┐рм░рнНрмжрнНрмжрм┐рм╖рнНрмЯ рм╕рм╛рммрмзрм╛рмирмдрм╛ рморм┐рм│рм┐рм▓рм╛ рмирм╛рм╣рм┐рмБред",
        "api_error": "тЭМ рм╣рмЧрм┐рмВ рмлрнЗрм╕рнН API рм╕рм╣рм┐рмд рм╕рмВрмпрнЛрмЧ рммрм┐рмлрм│ рм╣рнЗрм▓рм╛ред рмжрнЯрм╛рмХрм░рм┐ рмЖрмкрмгрмЩрнНрмХ рмХрм┐ рмХрм┐рморнНрммрм╛ рмХрнЛрмЯрм╛ рмпрм╛рмЮрнНрмЪ рмХрм░рмирнНрмдрнБред",
        "ai_no_detect": "тЪая╕П рмЫрммрм┐рм░рнБ рмХрнМрмгрм╕рм┐ рмЕрммрм╕рнНрмерм╛ рмЪрм┐рм╣рнНрмирмЯ рм╣рнЛрмЗрмкрм╛рм░рм┐рм▓рм╛ рмирм╛рм╣рм┐рмБред",
        "warning_select_symptom": "рмжрнЯрм╛рмХрм░рм┐ рмЕрмдрм┐ рмХрморм░рнЗ рмЧрнЛрмЯрм┐рмП рм▓рмХрнНрм╖рмг рммрм╛рмЫрмирнНрмдрнБред", "listening": "рм╢рнБрмгрнБрмЫрм┐...",
        "you_said": "рмЖрмкрмг рмХрм╣рм┐рм▓рнЗ:", "no_understand": "рмЕрмбрм┐рмУ рммрнБрмЭрм┐рм╣рнЗрм▓рм╛ рмирм╛рм╣рм┐рмБред",
        "request_error": "рмЕрмирнБрм░рнЛрмз рмлрм│рм╛рмлрм│ рморм┐рм│рм┐рм▓рм╛ рмирм╛рм╣рм┐рмБ;", "processing_voice": "рмЖрмкрмгрмЩрнНрмХ рмнрмПрм╕рнН рмЗрмирмкрнБрмЯрнН рмкрнНрм░рмХрнНрм░рм┐рнЯрм╛рмХрм░рмг рмХрм░рм╛рмпрм╛рмЙрмЫрм┐:",
        "detected_symptoms": "тЬФя╕П рмнрмПрм╕рнН рмЗрмирмкрнБрмЯрнНрм░рнБ рмЪрм┐рм╣рнНрмирмЯ рм▓рмХрнНрм╖рмгрмЧрнБрмбрм╝рм┐рмХ:",
        "no_symptoms_found": "рмЖрмкрмгрмЩрнНрмХ рмнрмПрм╕рнН рмЗрмирмкрнБрмЯрнНрм░рнЗ рмХрнМрмгрм╕рм┐ рм▓рмХрнНрм╖рмг рморм┐рм│рм┐рм▓рм╛ рмирм╛рм╣рм┐рмБред", "greeting": "рмирморм╕рнНрмХрм╛рм░, рморнБрмБ рмЖрмЬрм┐ рмЖрмкрмгрмЩрнНрмХрнБ рмХрм┐рмкрм░рм┐ рм╕рм╛рм╣рм╛рмпрнНрнЯ рмХрм░рм┐рмкрм╛рм░рм┐рммрм┐?",
        "google_lang": "or-IN"
    }
}

# Symptom Name Translations
symptom_translations = {
    "itching": {"en": "Itching", "hi": "рдЦреБрдЬрд▓реА", "mr": "рдЦрд╛рдЬ", "or": "рмХрм╛рмЫрнБ"},
    "skin_rash": {"en": "Skin Rash", "hi": "рддреНрд╡рдЪрд╛ рдкрд░ рдЪрдХрддреНрддреЗ", "mr": "рддреНрд╡рдЪреЗрд╡рд░ рдкреБрд░рд│", "or": "рмЪрм░рнНрмо рмШрм╛'"},
    "nodal_skin_eruptions": {"en": "Nodal Skin Eruptions", "hi": "рдиреЛрдбрд▓ рддреНрд╡рдЪрд╛ рд╡рд┐рд╕реНрдлреЛрдЯ", "mr": "рдиреЛрдбрд▓ рддреНрд╡рдЪреЗрдЪрд╛ рдЙрджреНрд░реЗрдХ", "or": "рмирнЛрмбрм╛рм▓рнН рмЪрм░рнНрмо рмлрм╛рмЯ"},
    "continuous_sneezing": {"en": "Continuous Sneezing", "hi": "рд▓рдЧрд╛рддрд╛рд░ рдЫреАрдВрдХ рдЖрдирд╛", "mr": "рд╕рддрдд рд╢рд┐рдВрдХрд╛ рдпреЗрдгреЗ", "or": "рм▓рмЧрм╛рмдрм╛рм░ рмЫрм┐рмЩрнНрмХ"},
    "shivering": {"en": "Shivering", "hi": "рдХрдВрдкрдХрдВрдкреА", "mr": "рдердВрдбреА рд╡рд╛рдЬрдгреЗ", "or": "рмерм░рм┐рммрм╛"},
    "chills": {"en": "Chills", "hi": "рдардВрдб рд▓рдЧрдирд╛", "mr": "рдердВрдбреА", "or": "рмермгрнНрмбрм╛ рм▓рм╛рмЧрм┐рммрм╛"},
    "joint_pain": {"en": "Joint Pain", "hi": "рдЬреЛрдбрд╝реЛрдВ рдХрд╛ рджрд░реНрдж", "mr": "рд╕рд╛рдВрдзреЗрджреБрдЦреА", "or": "рмЧрмгрнНрмарм┐ рмпрмирнНрмдрнНрм░рмгрм╛"},
    "stomach_pain": {"en": "Stomach Pain", "hi": "рдкреЗрдЯ рджрд░реНрдж", "mr": "рдкреЛрдЯрджреБрдЦреА", "or": "рмкрнЗрмЯ рмпрмирнНрмдрнНрм░рмгрм╛"},
    "acidity": {"en": "Acidity", "hi": "рдПрд╕рд┐рдбрд┐рдЯреА", "mr": "рдЖрдВрдмрдЯрдкрдгрд╛", "or": "рмПрм╕рм┐рмбрм┐рмЯрм┐"},
    "ulcers_on_tongue": {"en": "Ulcers on Tongue", "hi": "рдЬреАрдн рдкрд░ рдЫрд╛рд▓реЗ", "mr": "рдЬрд┐рднреЗрд╡рд░ рдлреЛрдб", "or": "рмЬрм┐рмнрм░рнЗ рмШрм╛"},
    "muscle_wasting": {"en": "Muscle Wasting", "hi": "рдорд╛рдВрд╕рдкреЗрд╢рд┐рдпреЛрдВ рдХрд╛ рдХреНрд╖рдп", "mr": "рд╕реНрдирд╛рдпреВрдВрдЪрд╛ рд▒реНрд╣рд╛рд╕", "or": "рморм╛рмВрм╕рмкрнЗрм╢рнА рмирм╖рнНрмЯ"},
    "vomiting": {"en": "Vomiting", "hi": "рдЙрд▓реНрдЯреА", "mr": "рдЙрд▓рдЯреНрдпрд╛ рд╣реЛрдгреЗ", "or": "рммрм╛рмирнНрмдрм┐"},
    "burning_micturition": {"en": "Burning Micturition", "hi": "рдкреЗрд╢рд╛рдм рдореЗрдВ рдЬрд▓рди", "mr": "рд▓рдШрд╡реА рдХрд░рддрд╛рдирд╛ рдЬрд│рдЬрд│", "or": "рмкрм░рм┐рм╕рнНрм░рм╛ рмХрм░рм┐рммрм╛рм░рнЗ рмЬрм│рм╛рмкрнЛрмбрм╛"},
    "fatigue": {"en": "Fatigue", "hi": "рдердХрд╛рди", "mr": "рдердХрд╡рд╛", "or": "рмХрнНрм│рм╛рмирнНрмдрм┐"},
    "weight_gain": {"en": "Weight Gain", "hi": "рд╡рдЬрди рдмрдврд╝рдирд╛", "mr": "рд╡рдЬрди рд╡рд╛рдврдгреЗ", "or": "рмУрмЬрми рммрнГрмжрнНрмзрм┐"},
    "anxiety": {"en": "Anxiety", "hi": "рдЪрд┐рдВрддрд╛", "mr": "рдЪрд┐рдВрддрд╛", "or": "рмЪрм┐рмирнНрмдрм╛"},
    "cold_hands_and_feets": {"en": "Cold Hands and Feet", "hi": "рд╣рд╛рде рдФрд░ рдкреИрд░ рдардВрдбреЗ", "mr": "рд╣рд╛рдд рдЖрдгрд┐ рдкрд╛рдп рдердВрдб", "or": "рм╣рм╛рмд рмПрммрмВ рмкрм╛рмж рмермгрнНрмбрм╛"},
    "mood_swings": {"en": "Mood Swings", "hi": "рдореВрдб рдореЗрдВ рдмрджрд▓рд╛рд╡", "mr": "рдореВрдб рдмрджрд▓рдгреЗ", "or": "рмормирм░ рмкрм░рм┐рммрм░рнНрмдрнНрмдрми"},
    "weight_loss": {"en": "Weight Loss", "hi": "рд╡рдЬрди рдШрдЯрдирд╛", "mr": "рд╡рдЬрди рдХрдореА рд╣реЛрдгреЗ", "or": "рмУрмЬрми рм╣рнНрм░рм╛рм╕"},
    "restlessness": {"en": "Restlessness", "hi": "рдмреЗрдЪреИрдиреА", "mr": "рдЕрд╕реНрд╡рд╕реНрдерддрд╛", "or": "рмЕрм╢рм╛рмирнНрмдрм┐"},
    "lethargy": {"en": "Lethargy", "hi": "рдЖрд▓рд╕реНрдп", "mr": "рдЖрд▓рд╕", "or": "рмЖрм│рм╕рнНрнЯ"},
    "patches_in_throat": {"en": "Patches in Throat", "hi": "рдЧрд▓реЗ рдореЗрдВ рдзрдмреНрдмреЗ", "mr": "рдШрд╢рд╛рдд рдбрд╛рдЧ", "or": "рмЧрм│рм╛рм░рнЗ рмжрм╛рмЧ"},
    "high_fever": {"en": "High Fever", "hi": "рддреЗрдЬ рдмреБрдЦрд╛рд░", "mr": "рддреАрд╡реНрд░ рддрд╛рдк", "or": "рмЕрмзрм┐рмХ рмЬрнНрн▒рм░"},
    "sunken_eyes": {"en": "Sunken Eyes", "hi": "рдзрдВрд╕реА рд╣реБрдИ рдЖрдВрдЦреЗрдВ", "mr": "рдбреЛрд│реЗ рдЦреЛрд▓ рдЬрд╛рдгреЗ", "or": "рмкрм╢рм┐ рмпрм╛рмЗрмерм┐рммрм╛ рмЖрмЦрм┐"},
    "dehydration": {"en": "Dehydration", "hi": "рдирд┐рд░реНрдЬрд▓реАрдХрд░рдг", "mr": "рдирд┐рд░реНрдЬрд▓реАрдХрд░рдг", "or": "рмЬрм│рм╣рнАрмирмдрм╛"},
    "indigestion": {"en": "Indigestion", "hi": "рдЕрдкрдЪ", "mr": "рдЕрдкрдЪрди", "or": "рмЕрмЬрнАрм░рнНрмгрнНрмг"},
    "headache": {"en": "Headache", "hi": "рд╕рд░рджрд░реНрдж", "mr": "рдбреЛрдХреЗрджреБрдЦреА", "or": "рморнБрмгрнНрмбрммрм┐рмирнНрмзрм╛"},
    "yellowish_skin": {"en": "Yellowish Skin", "hi": "рдкреАрд▓реА рддреНрд╡рдЪрд╛", "mr": "рдкрд┐рд╡рд│реА рддреНрд╡рдЪрд╛", "or": "рм╣рм│рмжрм┐рмЖ рмЪрм░рнНрмо"},
    "dark_urine": {"en": "Dark Urine", "hi": "рдЧрд╣рд░рд╛ рдкреЗрд╢рд╛рдм", "mr": "рдЧрдбрдж рд▓рдШрд╡реА", "or": "рмЧрм╛рмв рмкрм░рм┐рм╕рнНрм░рм╛"},
    "nausea": {"en": "Nausea", "hi": "рдЬреА рдорд┐рдЪрд▓рд╛рдирд╛", "mr": "рдорд│рдорд│", "or": "рмЕрмЗ"},
    "loss_of_appetite": {"en": "Loss of Appetite", "hi": "рднреВрдЦ рди рд▓рдЧрдирд╛", "mr": "рднреВрдХ рди рд▓рд╛рдЧрдгреЗ", "or": "рмнрнЛрмХ рми рм▓рм╛рмЧрм┐рммрм╛"},
    "pain_behind_the_eyes": {"en": "Pain Behind the Eyes", "hi": "рдЖрдВрдЦреЛрдВ рдХреЗ рдкреАрдЫреЗ рджрд░реНрдж", "mr": "рдбреЛрд│реНрдпрд╛рдВрдЪреНрдпрд╛ рдорд╛рдЧреЗ рд╡реЗрджрдирд╛", "or": "рмЖрмЦрм┐ рмкрмЫрм░рнЗ рмпрмирнНрмдрнНрм░рмгрм╛"},
    "back_pain": {"en": "Back Pain", "hi": "рдкреАрда рджрд░реНрдж", "mr": "рдкрд╛рдарджреБрдЦреА", "or": "рмкрм┐рмарм┐ рмпрмирнНрмдрнНрм░рмгрм╛"},
    "constipation": {"en": "Constipation", "hi": "рдХрдмреНрдЬ", "mr": "рдмрджреНрдзрдХреЛрд╖реНрдарддрд╛", "or": "рмХрнЛрм╖рнНрмармХрм╛рмарм┐рмирнНрнЯ"},
    "abdominal_pain": {"en": "Abdominal Pain", "hi": "рдкреЗрдЯ рджрд░реНрдж", "mr": "рдкреЛрдЯрджреБрдЦреА", "or": "рмкрнЗрмЯ рмпрмирнНрмдрнНрм░рмгрм╛"},
    "diarrhoea": {"en": "Diarrhoea", "hi": "рджрд╕реНрдд", "mr": "рдЬреБрд▓рд╛рдм", "or": "рмЭрм╛рмбрм╛"},
    "mild_fever": {"en": "Mild Fever", "hi": "рд╣рд▓реНрдХрд╛ рдмреБрдЦрд╛рд░", "mr": "рд╣рд▓рдХрд╛ рддрд╛рдк", "or": "рм╣рм╛рм▓рнБрмХрм╛ рмЬрнНрн▒рм░"},
    "yellow_urine": {"en": "Yellow Urine", "hi": "рдкреАрд▓рд╛ рдкреЗрд╢рд╛рдм", "mr": "рдкрд┐рд╡рд│реА рд▓рдШрд╡реА", "or": "рм╣рм│рмжрм┐рмЖ рмкрм░рм┐рм╕рнНрм░рм╛"},
    "yellowing_of_eyes": {"en": "Yellowing of Eyes", "hi": "рдЖрдВрдЦреЛрдВ рдХрд╛ рдкреАрд▓рд╛ рд╣реЛрдирд╛", "mr": "рдбреЛрд│реНрдпрд╛рдВрдЪрд╛ рдкрд┐рд╡рд│реЗрдкрдгрд╛", "or": "рмЖрмЦрм┐ рм╣рм│рмжрм┐рмЖ рм╣рнЗрммрм╛"},
    "acute_liver_failure": {"en": "Acute Liver Failure", "hi": "рддреАрд╡реНрд░ рдпрдХреГрдд рд╡рд┐рдлрд▓рддрд╛", "mr": "рддреАрд╡реНрд░ рдпрдХреГрдд рдирд┐рдХрд╛рдореА", "or": "рмдрнАрммрнНрм░ рмпрмХрнГрмд рммрм┐рмлрм│рмдрм╛"},
    "fluid_overload": {"en": "Fluid Overload", "hi": "рдлреНрд▓реВрдЗрдб рдУрд╡рд░рд▓реЛрдб", "mr": "рджреНрд░рд╡ рд╡рд╛рдврдгреЗ", "or": "рмдрм░рм│ рмкрмжрм╛рм░рнНрмерм░ рммрнГрмжрнНрмзрм┐"},
    "swelling_of_stomach": {"en": "Swelling of Stomach", "hi": "рдкреЗрдЯ рдореЗрдВ рд╕реВрдЬрди", "mr": "рдкреЛрдЯрд╛рдд рд╕реВрдЬ", "or": "рмкрнЗрмЯ рмлрнБрм▓рм┐рммрм╛"},
    "swelled_lymph_nodes": {"en": "Swollen Lymph Nodes", "hi": "рд╕реВрдЬреЗ рд╣реБрдП рд▓рд┐рдореНрдл рдиреЛрдбреНрд╕", "mr": "рд╕реБрдЬрд▓реЗрд▓реЗ рд▓рд┐рдореНрдл рдиреЛрдбреНрд╕", "or": "рмлрнБрм▓рм┐рмерм┐рммрм╛ рм▓рм┐рморнНрмл рмирнЛрмбрнН"},
    "malaise": {"en": "Malaise", "hi": "рдЕрд╕реНрд╡рд╕реНрдерддрд╛", "mr": "рдЕрд╕реНрд╡рд╕реНрдерддрд╛", "or": "рмЕрм╕рнБрм╕рнНрмермдрм╛"},
    "blurred_and_distorted_vision": {"en": "Blurred and Distorted Vision", "hi": "рдзреБрдВрдзрд▓реА рдФрд░ рд╡рд┐рдХреГрдд рджреГрд╖реНрдЯрд┐", "mr": "рдЕрдВрдзреБрдХ рдЖрдгрд┐ рд╡рд┐рдХреГрдд рджреГрд╖реНрдЯреА", "or": "рмЕрм╕рнНрмкрм╖рнНрмЯ рмПрммрмВ рммрм┐рмХрнГрмд рмжрнГрм╖рнНрмЯрм┐"},
    "phlegm": {"en": "Phlegm", "hi": "рдХрдл", "mr": "рдХрдл", "or": "рмХрмл"},
    "throat_irritation": {"en": "Throat Irritation", "hi": "рдЧрд▓реЗ рдореЗрдВ рдЬрд▓рди", "mr": "рдШрд╕рд╛ рдЦрд╡рдЦрд╡рдгреЗ", "or": "рмЧрм│рм╛ рмЬрм│рм╛рмкрнЛрмбрм╛"},
    "redness_of_eyes": {"en": "Redness of Eyes", "hi": "рдЖрдВрдЦреЛрдВ рдХрд╛ рд▓рд╛рд▓ рд╣реЛрдирд╛", "mr": "рдбреЛрд│реНрдпрд╛рдВрдЪреА рд▓рд╛рд▓рд╕рд░рдкрдгрд╛", "or": "рмЖрмЦрм┐ рм▓рм╛рм▓ рм╣рнЗрммрм╛"},
    "sinus_pressure": {"en": "Sinus Pressure", "hi": "рд╕рд╛рдЗрдирд╕ рджрдмрд╛рд╡", "mr": "рд╕рд╛рдпрдирд╕ рджрд╛рдм", "or": "рм╕рм╛рмЗрмирм╕рнН рмЪрм╛рмк"},
    "runny_nose": {"en": "Runny Nose", "hi": "рдмрд╣рддреА рдирд╛рдХ", "mr": "рдирд╛рдХ рд╡рд╛рд╣рдгреЗ", "or": "рмирм╛рмХ рммрм╣рм┐рммрм╛"},
    "congestion": {"en": "Congestion", "hi": "рднреАрдбрд╝", "mr": "рдЧрд░реНрджреА", "or": "рмнрм┐рмбрм╝"},
    "chest_pain": {"en": "Chest Pain", "hi": "рд╕реАрдиреЗ рдореЗрдВ рджрд░реНрдж", "mr": "рдЫрд╛рддреАрдд рджреБрдЦрдгреЗ", "or": "рмЫрм╛рмдрм┐ рмпрмирнНрмдрнНрм░рмгрм╛"},
    "fast_heart_rate": {"en": "Fast Heart Rate", "hi": "рддреЗрдЬ рд╣реГрджрдп рдЧрддрд┐", "mr": "рдЬрд▓рдж рд╣реГрджрдпрд╛рдЪреА рдЧрддреА", "or": "рмжрнНрм░рнБрмд рм╣рнГрмжрнЯ рмЧрмдрм┐"},
    "dizziness": {"en": "Dizziness", "hi": "рдЪрдХреНрдХрд░ рдЖрдирд╛", "mr": "рдЪрдХреНрдХрд░ рдпреЗрдгреЗ", "or": "рморнБрмгрнНрмб рммрнБрм▓рм╛рмЗрммрм╛"},
    "loss_of_balance": {"en": "Loss of Balance", "hi": "рд╕рдВрддреБрд▓рди рдЦреЛрдирд╛", "mr": "рд╕рдВрддреБрд▓рди рдЧрдорд╛рд╡рдгреЗ", "or": "рм╕рмирнНрмдрнБрм│рми рм╣рм░рм╛рмЗрммрм╛"},
    "lack_of_concentration": {"en": "Lack of Concentration", "hi": "рдПрдХрд╛рдЧреНрд░рддрд╛ рдХреА рдХрдореА", "mr": "рдПрдХрд╛рдЧреНрд░рддреЗрдЪрд╛ рдЕрднрд╛рд╡", "or": "рмПрмХрм╛рмЧрнНрм░рмдрм╛рм░ рмЕрмнрм╛рмм"},
    "altered_sensorium": {"en": "Altered Sensorium", "hi": "рдкрд░рд┐рд╡рд░реНрддрд┐рдд рд╕рдВрд╡реЗрджрдирд╢реАрд▓рддрд╛", "mr": "рдмрджрд▓рд▓реЗрд▓реА рд╕рдВрд╡реЗрджрдирд╢реАрд▓рддрд╛", "or": "рмкрм░рм┐рммрм░рнНрмдрнНрмдрм┐рмд рм╕рнЗрмирнНрм╕рм░рм┐рнЯрморнН"},
    "family_history": {"en": "Family History", "hi": "рдкрд╛рд░рд┐рд╡рд╛рд░рд┐рдХ рдЗрддрд┐рд╣рд╛рд╕", "mr": "рдХреМрдЯреБрдВрдмрд┐рдХ рдЗрддрд┐рд╣рд╛рд╕", "or": "рмкрм╛рм░рм┐рммрм╛рм░рм┐рмХ рмЗрмдрм┐рм╣рм╛рм╕"},
    "mucoid_sputum": {"en": "Mucoid Sputum", "hi": "рдореНрдпреВрдХреЙрдЗрдб рдереВрдХ", "mr": "рдореНрдпреВрдХреЙрдЗрдб рдереБрдВрдХрд╛", "or": "рморнНрнЯрнБрмХрмПрмбрнН рмЦрмЩрнНрмХрм╛рм░"},
    "rusty_sputum": {"en": "Rusty Sputum", "hi": "рдЬрдВрдЧ рд▓рдЧрд╛ рдереВрдХ", "mr": "рдЧрдВрдЬрд▓реЗрд▓рд╛ рдереБрдВрдХрд╛", "or": "рмЬрмЩрнНрмЧ рмЦрмЩрнНрмХрм╛рм░"},
    "lack_of_odor": {"en": "Lack of Odor", "hi": "рдЧрдВрдз рдХреА рдХрдореА", "mr": "рд╡рд╛рд╕рд╛рдЪрд╛ рдЕрднрд╛рд╡", "or": "рмЧрмирнНрмзрм░ рмЕрмнрм╛рмм"},
    "irritation_in_anus": {"en": "Irritation in Anus", "hi": "рдЧреБрджрд╛ рдореЗрдВ рдЬрд▓рди", "mr": "рдЧреБрджрджреНрд╡рд╛рд░рд╛рдд рдЬрд│рдЬрд│", "or": "рмЧрнБрмжрнНрн▒рм╛рм░рм░рнЗ рмЬрм│рм╛рмкрнЛрмбрм╛"},
    "passage_of_gases": {"en": "Passage of Gases", "hi": "рдЧреИрд╕реЛрдВ рдХрд╛ рдирд┐рдХрд▓рдирд╛", "mr": "рд╡рд╛рдпреВ рдмрд╛рд╣реЗрд░ рдкрдбрдгреЗ", "or": "рмЧрнНрнЯрм╛рм╕рнН рммрм╛рм╣рм╛рм░рм┐рммрм╛"},
    "internal_itching": {"en": "Internal Itching", "hi": "рдЖрдВрддрд░рд┐рдХ рдЦреБрдЬрд▓реА", "mr": "рдЕрдВрддрд░реНрдЧрдд рдЦрд╛рдЬ", "or": "рмЖрмнрнНрнЯрмирнНрмдрм░рнАрмг рмХрм╛рмЫрнБ"},
    "toxic_look": {"en": "Toxic Look", "hi": "рд╡рд┐рд╖рд╛рдХреНрдд рд░реВрдк", "mr": "рд╡рд┐рд╖рд╛рд░реА рджрд┐рд╕рдгреЗ", "or": "рммрм┐рм╖рм╛рмХрнНрмд рмжрнЗрмЦрм╛рмпрм┐рммрм╛"},
    "unsteadiness": {"en": "Unsteadiness", "hi": "рдЕрд╕реНрдерд┐рд░рддрд╛", "mr": "рдЕрд╕реНрдерд┐рд░рддрд╛", "or": "рмЕрм╕рнНрмерм┐рм░рмдрм╛"},
    "swelling_of_legs": {"en": "Swelling of Legs", "hi": "рдкреИрд░реЛрдВ рдореЗрдВ рд╕реВрдЬрди", "mr": "рдкрд╛рдпрд╛рдВрдирд╛ рд╕реВрдЬ", "or": "рмЧрнЛрмб рмлрнБрм▓рм┐рммрм╛"},
    "swollen_ankles": {"en": "Swollen Ankles", "hi": "рд╕реВрдЬреЗ рд╣реБрдП рдЯрдЦрдиреЗ", "mr": "рд╕реБрдЬрд▓реЗрд▓реЗ рдШреЛрдЯреЗ", "or": "рмлрнБрм▓рм┐рмерм┐рммрм╛ рмЧрнЛрмЗрмарм┐"},
    "brittle_nails": {"en": "Brittle Nails", "hi": "рдХрдордЬреЛрд░ рдирд╛рдЦреВрди", "mr": "рдард┐рд╕реВрд│ рдирдЦреЗ", "or": "рмнрмЩрнНрмЧрнБрм░ рмирмЦ"},
    "puffy_face_and_eyes": {"en": "Puffy Face and Eyes", "hi": "рдлреВрд▓рд╛ рд╣реБрдЖ рдЪреЗрд╣рд░рд╛ рдФрд░ рдЖрдВрдЦреЗрдВ", "mr": "рд╕реБрдЬрд▓реЗрд▓реЗ рдЪреЗрд╣рд░рд╛ рдЖрдгрд┐ рдбреЛрд│реЗ", "or": "рмлрнБрм▓рм┐рмерм┐рммрм╛ рморнБрм╣рмБ рмПрммрмВ рмЖрмЦрм┐"},
    "enlarged_thyroid": {"en": "Enlarged Thyroid", "hi": "рдмрдврд╝рд╛ рд╣реБрдЖ рдерд╛рдпрд░рд╛рдЗрдб", "mr": "рд╡рд╛рдврд▓реЗрд▓реА рдерд╛рдпрд░реЙрдЗрдб рдЧреНрд░рдВрдереА", "or": "рммрм░рнНрмжрнНрмзрм┐рмд рмерм╛рмЗрм░рмПрмбрнН"},
    "slurred_speech": {"en": "Slurred Speech", "hi": "рдЕрд╕реНрдкрд╖реНрдЯ рднрд╛рд╖рдг", "mr": "рдЕрд╕реНрдкрд╖реНрдЯ рднрд╛рд╖рдг", "or": "рм╕рнНрм▓рнБрм░рнНрмбрнН рммрмХрнНрмдрнГрмдрм╛"},
    "red_sore_around_nose": {"en": "Red Sore Around Nose", "hi": "рдирд╛рдХ рдХреЗ рдЪрд╛рд░реЛрдВ рдУрд░ рд▓рд╛рд▓ рдШрд╛рд╡", "mr": "рдирд╛рдХрд╛рдЬрд╡рд│ рд▓рд╛рд▓ рдлреЛрдб", "or": "рмирм╛рмХ рмЪрм╛рм░рм┐рмкрмЯрнЗ рм▓рм╛рм▓ рмШрм╛'"},
    "ulcers_on_lips": {"en": "Ulcers on Lips", "hi": "рд╣реЛрдВрдареЛрдВ рдкрд░ рдЫрд╛рд▓реЗ", "mr": "рдУрдард╛рдВрд╡рд░ рдлреЛрдб", "or": "рмУрмарм░рнЗ рмШрм╛"},
    "blistering": {"en": "Blistering", "hi": "рдЫрд╛рд▓реЗ рдкрдбрд╝рдирд╛", "mr": "рдлреЛрдбреЗ рдпреЗрдгреЗ", "or": "рмлрнЛрмЯрмХрм╛ рм╣рнЗрммрм╛"},
    "spotting_urination": {"en": "Spotting Urination", "hi": "рдкреЗрд╢рд╛рдм рдореЗрдВ рдзрдмреНрдмреЗ", "mr": "рд▓рдШрд╡реАрдд рдард┐рдкрдХреЗ", "or": "рмкрм░рм┐рм╕рнНрм░рм╛рм░рнЗ рмжрм╛рмЧ"}
}

# === Text-to-Speech ===
def speak(text):
    engine = pyttsx3.init()
    engine.setProperty('rate', 130)
    engine.say(text)
    engine.runAndWait()

# === Voice Recognition ===
def voice_input(lang_dict):
    r = sr.Recognizer()
    try:
        st.info(lang_dict["listening"])
        speak(lang_dict["listening"])
        with sr.Microphone() as source:
            audio = r.listen(source, timeout=5)
        text = r.recognize_google(audio, language=lang_dict.get("google_lang", "en-US"))
        st.success(f"{lang_dict['you_said']} {text}")
        return text
    except sr.UnknownValueError:
        st.error(lang_dict["no_understand"])
        return ""
    except sr.RequestError as e:
        st.error(f"{lang_dict['request_error']} {e}")
        return ""
    except Exception as e:
        st.error(f"An unexpected error occurred: {e}")
        return ""

# === Streamlit UI ===
st.set_page_config(page_title="Healthcare Chatbot", layout="wide")

# Add the manual language selection dropdown
selected_lang = st.sidebar.selectbox(
    "Select Language",
    list(translations.keys()),
    format_func=lambda x: {"en": "English", "hi": "рд╣рд┐рдВрджреА", "mr": "Marathi", "or": "Odia"}[x]
)
lang_dict = translations[selected_lang]

# Create the list of translated symptom options for the multiselect
symptom_options = [symptom_translations.get(sym, {}).get(selected_lang, sym.replace('_', ' ')) for sym in all_symptoms]

st.title(lang_dict["title"])
st.sidebar.header(lang_dict["sidebar_header"])

# Sidebar inputs
name = st.sidebar.text_input(lang_dict["name_label"])
user_symptoms_translated = st.sidebar.multiselect(lang_dict["symptoms_label"], symptom_options)
days = st.sidebar.number_input(lang_dict["days_label"], min_value=1, max_value=30, value=3)

# Voice input for symptoms
st.write("### ЁЯОЩя╕П Voice Recognition")
if st.button(lang_dict["voice_button"]):
    recognized_text = voice_input(lang_dict)
    if recognized_text:
        st.write(f"### {lang_dict['detected_symptoms']}")
        # Match voice input with original symptom names (more robust)
        matching_symptoms = [sym for sym in all_symptoms if sym.replace('_', ' ').lower() in recognized_text.lower()]
        
        if matching_symptoms:
            display_symptoms = [symptom_translations.get(sym, {}).get(selected_lang, sym.replace('_', ' ')) for sym in matching_symptoms]
            st.info(", ".join(display_symptoms))
        else:
            st.warning(lang_dict["no_symptoms_found"])

# Additional symptoms
additional_symptoms_translated = []
if user_symptoms_translated:
    st.write(f"### {lang_dict['additional_symptoms_header']}")
    # Get the original symptom names from the translated ones
    selected_english_symptoms = [sym for sym in all_symptoms if symptom_translations.get(sym, {}).get(selected_lang, sym.replace('_', ' ')) in user_symptoms_translated]

    for symptom in all_symptoms:
        if symptom not in selected_english_symptoms:
            translated_symptom_name = symptom_translations.get(symptom, {}).get(selected_lang, symptom.replace('_', ' '))
            translated_question = lang_dict['additional_symptom_question'].format(translated_symptom_name)
            
            # --- THE FIX IS HERE ---
            # We use the original symptom name as a unique key for each checkbox
            response = st.checkbox(translated_question, key=f"checkbox_{symptom}")
            
            if response:
                additional_symptoms_translated.append(translated_symptom_name)

# ===== Submit Symptoms Button =====
if st.button(lang_dict["submit_button"]):
    if user_symptoms_translated:
        all_user_symptoms_translated = list(set(user_symptoms_translated + additional_symptoms_translated))
        
        # Convert all selected symptoms back to original English names
        all_user_symptoms_original = [
            sym for sym in all_symptoms if symptom_translations.get(sym, {}).get(selected_lang, sym.replace('_', ' ')) in all_user_symptoms_translated
        ]
        
        st.write(f"### {lang_dict['symptoms_title']}")
        st.write(", ".join(all_user_symptoms_translated))

        # Predict Disease using original symptom names
        matching_diseases = training_data.copy()
        matching_diseases["match_count"] = matching_diseases.iloc[:, 1:].apply(
            lambda row: sum(row[all_user_symptoms_original]), axis=1)
        predicted_disease = matching_diseases.sort_values(by="match_count", ascending=False).iloc[0]["prognosis"]

        st.write(f"### {lang_dict['diagnosis_title']}")
        st.success(f"Based on your symptoms, you might have: **{predicted_disease}**")
        speak(f"Based on your symptoms, you might have {predicted_disease}")

        # Disease Description
        description = symptom_desc[symptom_desc["prognosis"] == predicted_disease]["Description"].values
        if len(description) > 0:
            st.write(f"### {lang_dict['description_title']}")
            st.info(description[0])

        # Precautions
        precautions = symptom_precaution[symptom_precaution["Disease"] == predicted_disease].iloc[:, 1:].values.flatten()
        if len(precautions) > 0:
            st.write(f"### {lang_dict['precautions_title']}")
            for i, precaution in enumerate(precautions):
                st.write(f"{i + 1}. {precaution}")

        # Symptom Severity
        st.write(f"### {lang_dict['severity_title']}")
        severity_data = []
        for symptom in all_user_symptoms_original:
            severity = symptom_severity[symptom_severity["Symptom"] == symptom]["weight"].values
            if len(severity) > 0:
                severity_data.append((symptom.replace('_', ' '), severity[0]))
        severity_df = pd.DataFrame(severity_data, columns=["Symptom", "Severity Level"])
        st.table(severity_df)
    else:
        st.warning(lang_dict["warning_select_symptom"])

# ====== Skin Disease Image Upload (Hugging Face Model) ======
st.write(f"## {lang_dict['image_upload_header']}")
uploaded_file = st.file_uploader(lang_dict["upload_label"], type=["jpg", "jpeg", "png"])
if uploaded_file is not None:
    st.image(uploaded_file, caption="Uploaded Skin Image", use_column_width=True)
    # Send image to Hugging Face API
    with st.spinner(lang_dict["spinner_text"]):
        image_bytes = uploaded_file.read()
        headers = {
            "Authorization": f"Bearer {HF_API_KEY}",
            "Content-Type": "application/octet-stream"
        }
        response = requests.post(HF_API_URL, headers=headers, data=image_bytes)
        if response.status_code == 200:
            predictions = response.json()
            if isinstance(predictions, list) and len(predictions) > 0:
                top_prediction = predictions[0]
                predicted_label = top_prediction["label"]
                confidence = round(top_prediction["score"] * 100, 2)
                st.success(f"{lang_dict['ai_prediction']} **{predicted_label}** ({confidence}% confidence)")
                speak(f"The AI model predicts {predicted_label} with {confidence} percent confidence")
                # Show precautions
                st.write(f"### {lang_dict['ai_precaution_header']}")
                precautions = symptom_precaution[symptom_precaution["Disease"].str.lower() == predicted_label.lower()].iloc[:, 1:].values.flatten()
                if len(precautions) > 0:
                    for i, precaution in enumerate(precautions):
                        st.write(f"{i + 1}. {precaution}")
                else:
                    st.info(lang_dict["no_precaution"])
            else:
                st.error(lang_dict["ai_no_detect"])
        else:
            st.error(lang_dict["api_error"])
